#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESC         &kp N1     &kp N2        &kp N3        &kp N4    &kp N5                               &kp N6       &kp N7  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N0           &kp BSPC
&kp TAB         &kp Q      &kp W         &kp E         &kp R     &kp T                                &kp Y        &kp U   &kp I             &kp O              &kp P            &kp BACKSLASH
&kp CAPS        &kp A      &kp S         &kp D         &kp F     &kp G                                &kp H        &kp J   &kp K             &kp L              &lt 3 SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X         &kp C         &kp V     &kp B    &kp PAGE_DOWN  &kp PAGE_UP  &kp N        &kp M   &kp COMMA         &kp DOT            &kp FSLH         &kp RIGHT_SHIFT
&none           &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &kp HOME  &kp END  &mo 4          &lt 2 RET    &lt 1 SPACE                                               &kp RIGHT_ALT    &kp DELETE
            >;
        };

        number_layer {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                  &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans  &trans    &trans    &trans  &trans     &trans                  &kp ESC       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK  &kp KP_DIVIDE
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                  &kp DEL       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &kp KP_EQUAL
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS      &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans                                                  &kp EQUAL     &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans  &trans           &trans        &trans        &trans        &trans                       &kp T      &kp R          &kp E         &kp W                 &kp Q                  &trans
&trans  &bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                       &kp G      &kp F          &kp D         &kp S                 &kp A                  &trans
&trans  &trans           &trans        &trans        &trans        &trans       &trans  &trans  &kp B      &kp V          &kp C         &kp X                 &kp Z                  &kp RSHIFT
&trans  &trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans                                                        &trans                 &trans
            >;
        };

        Arrows_Function {
            label = "FUN";
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans                           &trans             &trans              &trans          &trans               &trans  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                           &trans             &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp RC(RIGHT_ARROW)  &trans  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                           &trans             &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &trans  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans           &kp C_PLAY_PAUSE   &kp C_NEXT          &kp C_PREVIOUS  &trans               &trans  &trans
&trans  &trans  &trans   &trans   &trans   &trans  &trans  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN                                                           &trans  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                               &trans  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans    &trans    &trans  &trans     &trans                  &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans                  &trans         &mkp LCLK  &mkp RCLK  &trans     &trans     &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                  &kp PAGE_UP    &mkp LCLK  &trans     &mkp RCLK  &mkp MCLK  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &kp PAGE_DOWN  &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &mo 3                                           &trans     &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };
    };
};
